{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nimport Router from \"next/router\";\n\nasync function myGet(url, ctx) {\n  var _ctx$req;\n\n  const cookie = (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie;\n  const resp = await fetch(url, {\n    headers: {\n      cookie: cookie\n    }\n  });\n\n  if (resp.status === 401 && !ctx.req) {\n    Router.replace('/login');\n    return;\n  }\n\n  if (resp.status === 401 && ctx.req) {\n    var _ctx$res;\n\n    ctx.res.writeHead(302, {\n      Location: 'http://localhost:3000/login'\n    });\n    (_ctx$res = ctx.res) === null || _ctx$res === void 0 ? void 0 : _ctx$res.end();\n    return;\n  }\n\n  const json = await resp.json();\n  return json;\n}","map":{"version":3,"sources":["C:/Dev/Sandbox/next/next-starter/util/myGet.ts"],"names":["fetch","Router","myGet","url","ctx","cookie","req","headers","resp","status","replace","res","writeHead","Location","end","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,eAAeC,KAAf,CAAqBC,GAArB,EAAkCC,GAAlC,EAAwD;AAAA;;AACpD,QAAMC,MAAM,eAAGD,GAAG,CAACE,GAAP,6CAAG,SAASC,OAAT,CAAiBF,MAAhC;AAEA,QAAMG,IAAI,GAAG,MAAMR,KAAK,CAACG,GAAD,EAAM;AAC1BI,IAAAA,OAAO,EAAE;AACLF,MAAAA,MAAM,EAAEA;AADH;AADiB,GAAN,CAAxB;;AAMA,MAAGG,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuB,CAACL,GAAG,CAACE,GAA/B,EAAoC;AAChCL,IAAAA,MAAM,CAACS,OAAP,CAAe,QAAf;AACA;AACH;;AAED,MAAGF,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuBL,GAAG,CAACE,GAA9B,EAAmC;AAAA;;AAC/BF,IAAAA,GAAG,CAACO,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AACpBC,MAAAA,QAAQ,EAAE;AADU,KAAvB;AAIA,gBAAAT,GAAG,CAACO,GAAJ,sDAASG,GAAT;AACA;AACH;;AAED,QAAMC,IAAI,GAAG,MAAMP,IAAI,CAACO,IAAL,EAAnB;AACA,SAAOA,IAAP;AACH","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { NextPageContext } from \"next\";\r\nimport Router from \"next/router\";\r\n\r\nasync function myGet(url: string, ctx: NextPageContext) {\r\n    const cookie = ctx.req?.headers.cookie;\r\n\r\n    const resp = await fetch(url, {\r\n        headers: {\r\n            cookie: cookie!\r\n        }\r\n    });\r\n\r\n    if(resp.status === 401 && !ctx.req) {\r\n        Router.replace('/login');\r\n        return;\r\n    }\r\n\r\n    if(resp.status === 401 && ctx.req) {\r\n        ctx.res.writeHead(302, {\r\n           Location: 'http://localhost:3000/login' \r\n        });\r\n\r\n        ctx.res?.end();\r\n        return;\r\n    }\r\n\r\n    const json = await resp.json();\r\n    return json;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}