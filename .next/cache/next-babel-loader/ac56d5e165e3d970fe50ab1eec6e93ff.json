{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nimport Router from \"next/router\";\nexport function myGet(_x, _x2) {\n  return _myGet.apply(this, arguments);\n}\n\nfunction _myGet() {\n  _myGet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, ctx) {\n    var _ctx$req;\n\n    var cookie, resp, _ctx$res, json;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cookie = (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie;\n            _context.next = 3;\n            return fetch(url, {\n              headers: {\n                cookie: cookie\n              }\n            });\n\n          case 3:\n            resp = _context.sent;\n\n            if (!(resp.status === 401 && !ctx.req)) {\n              _context.next = 7;\n              break;\n            }\n\n            Router.replace('/login');\n            return _context.abrupt(\"return\");\n\n          case 7:\n            if (!(resp.status === 401 && ctx.req)) {\n              _context.next = 11;\n              break;\n            }\n\n            ctx.res.writeHead(302, {\n              Location: 'http://localhost:3000/login'\n            });\n            (_ctx$res = ctx.res) === null || _ctx$res === void 0 ? void 0 : _ctx$res.end();\n            return _context.abrupt(\"return\");\n\n          case 11:\n            _context.next = 13;\n            return resp.json();\n\n          case 13:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _myGet.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Dev/Sandbox/next/next-starter/util/myGet.ts"],"names":["fetch","Router","myGet","url","ctx","cookie","req","headers","resp","status","replace","res","writeHead","Location","end","json"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,gBAAsBC,KAAtB;AAAA;AAAA;;;oEAAO,iBAAqBC,GAArB,EAAkCC,GAAlC;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACGC,YAAAA,MADH,eACYD,GAAG,CAACE,GADhB,6CACY,SAASC,OAAT,CAAiBF,MAD7B;AAAA;AAAA,mBAGgBL,KAAK,CAACG,GAAD,EAAM;AAC1BI,cAAAA,OAAO,EAAE;AACLF,gBAAAA,MAAM,EAAEA;AADH;AADiB,aAAN,CAHrB;;AAAA;AAGGG,YAAAA,IAHH;;AAAA,kBASAA,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuB,CAACL,GAAG,CAACE,GAT5B;AAAA;AAAA;AAAA;;AAUCL,YAAAA,MAAM,CAACS,OAAP,CAAe,QAAf;AAVD;;AAAA;AAAA,kBAcAF,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuBL,GAAG,CAACE,GAd3B;AAAA;AAAA;AAAA;;AAeCF,YAAAA,GAAG,CAACO,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AACpBC,cAAAA,QAAQ,EAAE;AADU,aAAvB;AAIA,wBAAAT,GAAG,CAACO,GAAJ,sDAASG,GAAT;AAnBD;;AAAA;AAAA;AAAA,mBAuBgBN,IAAI,CAACO,IAAL,EAvBhB;;AAAA;AAuBGA,YAAAA,IAvBH;AAAA,6CAwBIA,IAxBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { NextPageContext } from \"next\";\r\nimport Router from \"next/router\";\r\n\r\nexport async function myGet(url: string, ctx: NextPageContext) {\r\n    const cookie = ctx.req?.headers.cookie;\r\n\r\n    const resp = await fetch(url, {\r\n        headers: {\r\n            cookie: cookie!\r\n        }\r\n    });\r\n\r\n    if(resp.status === 401 && !ctx.req) {\r\n        Router.replace('/login');\r\n        return;\r\n    }\r\n\r\n    if(resp.status === 401 && ctx.req) {\r\n        ctx.res.writeHead(302, {\r\n           Location: 'http://localhost:3000/login' \r\n        });\r\n\r\n        ctx.res?.end();\r\n        return;\r\n    }\r\n\r\n    const json = await resp.json();\r\n    return json;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}