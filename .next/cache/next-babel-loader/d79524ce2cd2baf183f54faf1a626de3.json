{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Dev\\\\Sandbox\\\\next\\\\next-starter\\\\pages\\\\groceries.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch'; //https://next-mongodb-nine.now.sh/api/daily\n//http://localhost:3000/api/daily'\n//const apiUrl = 'https://next-mongodb-nine.now.sh/api/daily';\n\nvar apiUrl = 'http://localhost:3000/api/groceries';\n\nvar Groceries = function Groceries(_ref) {\n  var groceries = _ref.groceries;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Groceries Page\", __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, JSON.stringify(groceries)));\n};\n\n_c = Groceries;\n\nGroceries.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query, req, res, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query, req = _ref2.req;\n\n            if (req) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              data: undefined\n            });\n\n          case 3:\n            _context.next = 5;\n            return fetch(apiUrl);\n\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.json();\n\n          case 8:\n            json = _context.sent;\n            return _context.abrupt(\"return\", {\n              groceries: json\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Groceries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Groceries\");","map":{"version":3,"sources":["C:/Dev/Sandbox/next/next-starter/pages/groceries.tsx"],"names":["React","fetch","apiUrl","Groceries","groceries","JSON","stringify","getInitialProps","query","req","data","undefined","res","json"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AAEA;;AACA,IAAMC,MAAM,GAAG,qCAAf;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACjC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACC,SAAL,CAAeF,SAAf,CADL,CAFJ,CADJ;AAQH,CATD;;KAAMD,S;;AAWNA,SAAS,CAACI,eAAV;AAAA,uEAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,YAAAA,KAAR,SAAQA,KAAR,EAAeC,GAAf,SAAeA,GAAf;;AAAA,gBAGpBA,GAHoB;AAAA;AAAA;AAAA;;AAAA,6CAIb;AAAEC,cAAAA,IAAI,EAAEC;AAAR,aAJa;;AAAA;AAAA;AAAA,mBASNV,KAAK,CAACC,MAAD,CATC;;AAAA;AASlBU,YAAAA,GATkB;AAAA;AAAA,mBAULA,GAAG,CAACC,IAAJ,EAVK;;AAAA;AAUlBA,YAAAA,IAVkB;AAAA,6CAWjB;AAAET,cAAAA,SAAS,EAAES;AAAb,aAXiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeV,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n//https://next-mongodb-nine.now.sh/api/daily\r\n//http://localhost:3000/api/daily'\r\n\r\n//const apiUrl = 'https://next-mongodb-nine.now.sh/api/daily';\r\nconst apiUrl = 'http://localhost:3000/api/groceries';\r\n\r\nconst Groceries = ({ groceries }) => {\r\n    return (\r\n        <div>\r\n            Groceries Page\r\n            <pre>\r\n                {JSON.stringify(groceries)}\r\n            </pre>\r\n        </div>\r\n    );\r\n}\r\n\r\nGroceries.getInitialProps = async ({query, req}) => {\r\n    //https://next-mongodb-nine.now.sh/api/daily\r\n    //http://localhost:3000/api/daily'\r\n    if(!req) {\r\n        return { data: undefined };\r\n    }\r\n\r\n    //query.person - get the person param from the query string\r\n\r\n    const res = await fetch(apiUrl)\r\n    const json = await res.json()\r\n    return { groceries: json }\r\n}\r\n\r\n\r\nexport default Groceries;"]},"metadata":{},"sourceType":"module"}