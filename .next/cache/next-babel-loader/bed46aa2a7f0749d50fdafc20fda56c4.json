{"ast":null,"code":"import { MongoClient } from 'mongodb';\nimport { authenticate } from '../../../middleware/authenticate';\nconst client = new MongoClient(process.env.MONGODB_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nexport default authenticate(async function groceriesList(req, res) {\n  if (req.method != 'GET') {\n    res.json({\n      status: 'GET only'\n    });\n    return;\n  }\n\n  if (!client.isConnected()) {\n    await client.connect();\n  }\n\n  const db = client.db('groceriesDB');\n  const groceries = await db.collection('groceries').find().toArray();\n  res.json(groceries);\n});","map":{"version":3,"sources":["C:/Dev/Sandbox/next/next-starter/pages/api/groceries/index.ts"],"names":["MongoClient","authenticate","client","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","groceriesList","req","res","method","json","status","isConnected","connect","db","groceries","collection","find","toArray"],"mappings":"AACA,SAASA,WAAT,QAA4B,SAA5B;AAEA,SAASC,YAAT,QAA6B,kCAA7B;AAEA,MAAMC,MAAM,GAAG,IAAIF,WAAJ,CAAgBG,OAAO,CAACC,GAAR,CAAYC,WAA5B,EAAyC;AACpDC,EAAAA,eAAe,EAAE,IADmC;AAEpDC,EAAAA,kBAAkB,EAAE;AAFgC,CAAzC,CAAf;AAKA,eAAeN,YAAY,CAAC,eAAeO,aAAf,CACxBC,GADwB,EAExBC,GAFwB,EAG1B;AACE,MAAID,GAAG,CAACE,MAAJ,IAAc,KAAlB,EAAyB;AACrBD,IAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAT;AACA;AACH;;AAED,MAAI,CAACX,MAAM,CAACY,WAAP,EAAL,EAA2B;AACvB,UAAMZ,MAAM,CAACa,OAAP,EAAN;AACH;;AAED,QAAMC,EAAE,GAAGd,MAAM,CAACc,EAAP,CAAU,aAAV,CAAX;AACA,QAAMC,SAAS,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,WAAd,EAA2BC,IAA3B,GAAkCC,OAAlC,EAAxB;AAEAV,EAAAA,GAAG,CAACE,IAAJ,CAASK,SAAT;AACH,CAjB0B,CAA3B","sourcesContent":["import { NextApiRequest, NextApiResponse, NextApiHandler } from 'next';\r\nimport { MongoClient } from 'mongodb';\r\nimport { verify } from 'jsonwebtoken';\r\nimport { authenticate } from '../../../middleware/authenticate';\r\n\r\nconst client = new MongoClient(process.env.MONGODB_URI, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n});\r\n\r\nexport default authenticate(async function groceriesList(\r\n    req: NextApiRequest,\r\n    res: NextApiResponse\r\n) {\r\n    if (req.method != 'GET') {\r\n        res.json({ status: 'GET only' });\r\n        return;\r\n    }\r\n\r\n    if (!client.isConnected()) {\r\n        await client.connect();\r\n    }\r\n\r\n    const db = client.db('groceriesDB');\r\n    const groceries = await db.collection('groceries').find().toArray();\r\n\r\n    res.json(groceries);\r\n});"]},"metadata":{},"sourceType":"module"}