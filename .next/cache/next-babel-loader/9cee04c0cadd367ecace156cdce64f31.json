{"ast":null,"code":"import { MongoClient } from 'mongodb';\nconst client = new MongoClient(process.env.MONGODB_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nexport default async function signup(req, res) {\n  if (!client.isConnected()) {\n    await client.connect();\n  }\n\n  const db = client.db('groceriesDB');\n  const existingUser = await db.collection('users').findOne({\n    \"email\": req.body.email\n  });\n\n  if (existingUser) {\n    res.json({\n      status: 'Email address already in use'\n    });\n  } else {\n    const data = {\n      name: req.body.name,\n      email: req.body.email,\n      password: req.body.password,\n      exists: existingUser\n    };\n    res.json(data);\n  }\n}","map":{"version":3,"sources":["C:/Dev/Sandbox/next/next-starter/pages/api/user/signup.ts"],"names":["MongoClient","client","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","signup","req","res","isConnected","connect","db","existingUser","collection","findOne","body","email","json","status","data","name","password","exists"],"mappings":"AACA,SAASA,WAAT,QAA4B,SAA5B;AAGA,MAAMC,MAAM,GAAG,IAAID,WAAJ,CAAgBE,OAAO,CAACC,GAAR,CAAYC,WAA5B,EAAyC;AACpDC,EAAAA,eAAe,EAAE,IADmC;AAEpDC,EAAAA,kBAAkB,EAAE;AAFgC,CAAzC,CAAf;AAKA,eAAe,eAAeC,MAAf,CACXC,GADW,EAEXC,GAFW,EAGb;AACE,MAAG,CAACR,MAAM,CAACS,WAAP,EAAJ,EAA0B;AACtB,UAAMT,MAAM,CAACU,OAAP,EAAN;AACH;;AAED,QAAMC,EAAE,GAAGX,MAAM,CAACW,EAAP,CAAU,aAAV,CAAX;AAEA,QAAMC,YAAY,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,OAAvB,CAA+B;AAAE,aAASP,GAAG,CAACQ,IAAJ,CAASC;AAApB,GAA/B,CAA3B;;AAEA,MAAGJ,YAAH,EAAiB;AACbJ,IAAAA,GAAG,CAACS,IAAJ,CAAS;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAT;AACH,GAFD,MAEO;AACH,UAAMC,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAEb,GAAG,CAACQ,IAAJ,CAASK,IADN;AAETJ,MAAAA,KAAK,EAAET,GAAG,CAACQ,IAAJ,CAASC,KAFP;AAGTK,MAAAA,QAAQ,EAAEd,GAAG,CAACQ,IAAJ,CAASM,QAHV;AAITC,MAAAA,MAAM,EAAEV;AAJC,KAAb;AAOAJ,IAAAA,GAAG,CAACS,IAAJ,CAASE,IAAT;AACH;AAGJ","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\r\nimport { MongoClient } from 'mongodb'; \r\nimport { hash } from 'bcrypt';\r\n\r\nconst client = new MongoClient(process.env.MONGODB_URI, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n});\r\n\r\nexport default async function signup(\r\n    req: NextApiRequest,\r\n    res: NextApiResponse\r\n) {\r\n    if(!client.isConnected()) {\r\n        await client.connect();\r\n    }\r\n\r\n    const db = client.db('groceriesDB');\r\n\r\n    const existingUser = await db.collection('users').findOne({ \"email\": req.body.email });\r\n\r\n    if(existingUser) {\r\n        res.json({ status: 'Email address already in use' });\r\n    } else {\r\n        const data = {\r\n            name: req.body.name,\r\n            email: req.body.email,\r\n            password: req.body.password,\r\n            exists: existingUser\r\n        };\r\n    \r\n        res.json(data);\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}